import Head from "next/head";
import Image from "next/image";
import styled from "styled-components";
import SearchHeader from "../components/root/SearchHeader";
import dynamic from "next/dynamic";
import Order from "../components/search/Order";
import StationRoot1 from "../components/root/StationRoot1";
import StationRoot2 from "../components/root/StationRoot2";
import StationRoot3 from "../components/root/StationRoot3";
import Start from "../components/root/Start";
import Destination from "../components/root/Destination";
import TimeTransfer from "../components/root/Timetransfer";

const Map = dynamic(() => import("../components/Map"), { ssr: false });

const Content1 = styled.div`
  z-index: 1;
  top: 0;
  left: 0;
  width: 100vw;
`;
const Contente2 = styled.div`
  background-color: white;
  overflow: scroll;
  display: flex;
  flex-direction: column;
`;

export default function Home() {
  return (
    <div>
      <Head>
        <title>WMap</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Map></Map> */}

      <Content1>
        <SearchHeader></SearchHeader>
        <Order></Order>
      </Content1>

      <Contente2>
        {/* exit, direction, quick, time, start, arrive */}
        <TimeTransfer time={30} timeunit={"분"} transfer={2}></TimeTransfer>
        <Start></Start>
        <StationRoot1
          start={"서초"}
          exit={2}
          direction={"방배"}
          quick={"3-4"}
          time={5}
          arrive={"사당"}
        ></StationRoot1>
        <StationRoot2 transferway={"휠체어"} transfertime={5}></StationRoot2>
        <StationRoot3
          start={"사당"}
          exit={3}
          direction={"당고개행"}
          quick={"4-1"}
          time={20}
          arrive={"명동"}
        ></StationRoot3>
        <Destination></Destination>
        {/* <Title title={data.name} options={data.option}></Title> */}
      </Contente2>
    </div>
  );
}
// export async function getServerSideProps() {
//   await mongodbconnect();
//   const placeList = await placemodel.find();
//   return { props: { placeList: placeList } };
// }
